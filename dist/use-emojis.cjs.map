{"version":3,"file":"use-emojis.cjs","sources":["../src/use-emojis.js"],"sourcesContent":["export default function () {\n  const convertedPositions = [];\n  const emojiMap = {\n  'o/': '👋',\n  '</3': '💔',\n  '<3': '❤️',\n  '8-D': '😃',\n  '8D': '😃',\n  '8)': '😃',\n  'B-D': '😎',\n  'BD': '😎',\n  'B)': '😎',\n  ':-D': '😄',\n  ':D': '😄',\n  \":'(\": '😢',\n  \":'-(\": '😢',\n  ':-))': '😁',\n  ':)': '😊',\n  ':-)': '😊',\n  ':]': '😊',\n  '0:)': '😇',\n  '0:-)': '😇',\n  'O:-)': '😇',\n  '3:)': '😈',\n  '3:-)': '😈',\n  '}:)': '😈',\n  '}:-)': '😈',\n  ';)': '😉',\n  ';-)': '😉',\n  ';-]': '😉',\n  ';D': '😉',\n  ';]': '😉',\n  ':-|': '😐',\n  ':|': '😐',\n  ':-/': '😕',\n  // ':/': '😕', // Effs with URLs\n  ':(': '😞',\n  ':-(': '😞',\n  ':[': '😞',\n  '%)': '😖',\n  '%-)': '😖',\n  ':-P': '😜',\n  ':-b': '😜',\n  ':-p': '😜',\n  ':-Þ': '😜',\n  ':-þ': '😜',\n  ':P': '😜',\n  ':b': '😜',\n  ':p': '😜',\n  ':Þ': '😜',\n  ':þ': '😜',\n  'd:': '😜',\n  ':-O': '😮',\n  ':-o': '😮',\n  ':O': '😮',\n  ':o': '😮'\n  };\n  const replaceEmoticonsWithEmojis = (textarea) => {\n    var newValue = textarea.value;\n    // Check chars trailing the cursor;\n    const cursor = textarea.selectionStart;\n    const startPos = cursor - 4;\n    const end = newValue.slice(startPos, cursor); // Use `cursor - 1` to wait for next char\n    for (var prop in emojiMap) {\n      if (end.indexOf(prop) > -1) {\n        // Skip if already tried converting this symbol here:\n        if (convertedPositions[startPos] !== prop) {\n          newValue = newValue.slice(0, startPos) + end.replace(prop, emojiMap[prop]) + newValue.slice(cursor);\n          // Log conversions of this symbol here:\n          for (var i = 0; i < 3; i++) {\n            convertedPositions[startPos + i] = prop;\n          }\n        }\n      }\n    }\n    textarea.selectionStart = cursor;\n    textarea.selectionEnd = cursor;\n    return newValue;\n  };\n  return {\n    emojiMap,\n    replaceEmoticonsWithEmojis\n  }\n}\n"],"names":["convertedPositions","emojiMap","BD","replaceEmoticonsWithEmojis","textarea","newValue","value","cursor","selectionStart","startPos","end","slice","prop","indexOf","replace","i","selectionEnd"],"mappings":"eAAe,WACb,IAAMA,EAAqB,GACrBC,EAAW,CACjB,KAAM,KACN,MAAO,KACP,KAAM,KACN,MAAO,KACP,KAAM,KACN,KAAM,KACN,MAAO,KACPC,GAAM,KACN,KAAM,KACN,MAAO,KACP,KAAM,KACN,MAAO,KACP,OAAQ,KACR,OAAQ,KACR,KAAM,KACN,MAAO,KACP,KAAM,KACN,MAAO,KACP,OAAQ,KACR,OAAQ,KACR,MAAO,KACP,OAAQ,KACR,MAAO,KACP,OAAQ,KACR,KAAM,KACN,MAAO,KACP,MAAO,KACP,KAAM,KACN,KAAM,KACN,MAAO,KACP,KAAM,KACN,MAAO,KAEP,KAAM,KACN,MAAO,KACP,KAAM,KACN,KAAM,KACN,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,KAAM,KACN,KAAM,KACN,KAAM,KACN,KAAM,KACN,KAAM,KACN,KAAM,KACN,MAAO,KACP,MAAO,KACP,KAAM,KACN,KAAM,MAwBN,MAAO,CACLD,SAAAA,EACAE,2BAxBiC,SAACC,GAClC,IAAIC,EAAWD,EAASE,MAElBC,EAASH,EAASI,eAClBC,EAAWF,EAAS,EACpBG,EAAML,EAASM,MAAMF,EAAUF,GACrC,IAAK,IAAIK,KAAQX,EACf,GAAIS,EAAIG,QAAQD,IAAS,GAEnBZ,EAAmBS,KAAcG,EAAM,CACzCP,EAAWA,EAASM,MAAM,EAAGF,GAAYC,EAAII,QAAQF,EAAMX,EAASW,IAASP,EAASM,MAAMJ,GAE5F,IAAK,IAAIQ,EAAI,EAAGA,EAAI,EAAGA,IACrBf,EAAmBS,EAAWM,GAAKH,CAEvC,CAKJ,OAFAR,EAASI,eAAiBD,EAC1BH,EAASY,aAAeT,EACjBF,CACT,EAKF"}